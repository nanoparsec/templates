AllCops:
  DisabledByDefault: true
  DisplayCopNames: true
  Exclude:
    - "sandbox.rb"
    - "sandbox/**/*"
    - "app/models/sandbox.rb"
    - "tmp/**/*"
    - "bin/**/*"
    - "db/**/*"
    - "script/**/*"
    - "public/**/*"
    - "data/**/*"
    - "vendor/bundle/**/*"
    - "node_modules/**/*"

### Style ###

Layout/AccessModifierIndentation:
  Enabled: true

Style/Alias:
  Enabled: true
  EnforcedStyle: prefer_alias_method

Style/AndOr:
  Enabled: true

Style/BlockDelimiters:
  Enabled: true

Layout/CaseIndentation:
  Enabled: true

Style/CollectionMethods:
  Enabled: true

Style/ConditionalAssignment:
  Enabled: true

Layout/DotPosition:
  Enabled: true

Style/EachWithObject:
  Enabled: true

Style/EmptyElse:
  Enabled: true
  EnforcedStyle: empty

Style/GlobalVars:
  Enabled: true

Style/HashSyntax:
  Enabled: true

Layout/IndentAssignment:
  Enabled: true

Layout/IndentationConsistency:
  # The difference between `rails` and `normal` is that the `rails` style
  # prescribes that in classes and modules the `protected` and `private`
  # modifier keywords shall be indented the same as public methods and that
  # protected and private members shall be indented one step more than the
  # modifiers. Other than that, both styles mean that entities on the same
  # logical depth shall have the same indentation.
  Enabled: true
  EnforcedStyle: normal

Layout/IndentationWidth:
  Enabled: true

Style/MethodDefParentheses:
  Enabled: true

Style/MethodName:
  Enabled: true

Layout/MultilineAssignmentLayout:
  Enabled: true
  EnforcedStyle: same_line

Style/NestedTernaryOperator:
  Enabled: true

Style/PercentLiteralDelimiters:
  PreferredDelimiters:
    '%':  ()
    '%i': ()
    '%q': ()
    '%Q': ()
    '%r': '{}'
    '%s': ()
    '%w': ()
    '%W': ()
    '%x': ()

Style/RegexpLiteral:
  Enabled: true
  EnforcedStyle: mixed

Layout/SpaceAroundOperators:
  Enabled: true

Layout/SpaceBeforeBlockBraces:
  Enabled: true

Layout/SpaceInsideBlockBraces:
  Enabled: true

Layout/SpaceInsideHashLiteralBraces:
  Enabled: true

Layout/SpaceAroundEqualsInParameterDefault:
  Enabled: true

Style/StabbyLambdaParentheses:
  Enabled: true

Style/StringLiterals:
  Enabled: true
  EnforcedStyle: double_quotes
  SupportedStyles:
    - single_quotes
    - double_quotes

Style/SymbolProc:
  Enabled: true

Layout/Tab:
  Enabled: true

Layout/TrailingWhitespace:
  Enabled: true

Style/TrivialAccessors:
  Enabled: true

Style/VariableName:
  Enabled: true

Style/WordArray:
  EnforcedStyle: percent

### Lint ###

Lint/DeprecatedClassMethods:
  Enabled: true

Lint/DuplicateMethods:
  Enabled: true

Lint/EndAlignment:
  Enabled: true

Lint/UnusedBlockArgument:
  Enabled: true

Lint/UnusedMethodArgument:
  Enabled: true
  AllowUnusedKeywordArguments: true

Lint/UnreachableCode:
  Enabled: true

Lint/ShadowingOuterLocalVariable:
  Enabled: true

Lint/Void:
  Enabled: true

Lint/DuplicatedKey:
  Enabled: true

### Rails ###

Rails:
  Enabled: true

Rails/ActionFilter:
  EnforcedStyle: action
  SupportedStyles:
    - action
    - filter
  Include:
    - app/controllers/**/*.rb

Rails/Date:
  # The value `strict` disallows usage of `Date.today`, `Date.current`,
  # `Date#to_time` etc.
  # The value `flexible` allows usage of `Date.current`, `Date.yesterday`, etc
  # (but not `Date.today`) which are overriden by ActiveSupport to handle current
  # time zone.
  EnforcedStyle: flexible
  SupportedStyles:
    - strict
    - flexible

Rails/FindBy:
  Include:
    - app/models/**/*.rb

Rails/FindEach:
  Include:
    - app/models/**/*.rb

Rails/HasAndBelongsToMany:
  Include:
    - app/models/**/*.rb

Rails/Output:
  Include:
    - app/**/*.rb
    - config/**/*.rb
    - db/**/*.rb
    - lib/**/*.rb

Rails/ReadWriteAttribute:
  Include:
    - app/models/**/*.rb

Rails/ScopeArgs:
  Include:
    - app/models/**/*.rb

Rails/Validation:
  Include:
    - app/models/**/*.rb
